pipeline {
    agent none
    stages {
        stage('Testing') {
            parallel {
                stage('EL8.7 Virt') {
                    agent { label 'vm-rhel-8-7-0' }
                    environment {
                        TEST_OS = "rhel-8-7"
                    }
                    steps {
                        run_virt_test('ostree-legacy')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('EL8.7 ng Virt') {
                    agent { label 'vm-rhel-8-7-0' }
                    environment {
                        TEST_OS = "rhel-8-7"
                    }
                    steps {
                        run_virt_test('ostree-ng')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('EL8.7 raw image') {
                    agent { label 'vm-rhel-8-7-0' }
                    environment {
                        TEST_OS = "rhel-8-7"
                    }
                    steps {
                        run_virt_test('raw-image')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('EL8.7 simplified installer') {
                    agent { label 'vm-rhel-8-7-0' }
                    environment {
                        TEST_OS = "rhel-8-7"
                    }
                    steps {
                        run_virt_test('simplified-installer')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('EL8.7 rebase') {
                    agent { label 'vm-rhel-8-7-0' }
                    environment {
                        TEST_OS = "rhel-8-7"
                    }
                    steps {
                        run_virt_test('ostree-rebase')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('EL9.1 Virt') {
                    agent { label 'vm-rhel-9-1-0' }
                    environment {
                        TEST_OS = "rhel-9-1"
                    }
                    steps {
                        run_virt_test('ostree-legacy')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('EL9.1 ng Virt') {
                    agent { label 'vm-rhel-9-1-0' }
                    environment {
                        TEST_OS = "rhel-9-1"
                    }
                    steps {
                        run_virt_test('ostree-ng')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('EL9.1 raw image') {
                    agent { label 'vm-rhel-9-1-0' }
                    environment {
                        TEST_OS = "rhel-9-1"
                    }
                    steps {
                        run_virt_test('raw-image')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('EL9.1 simplified installer') {
                    agent { label 'vm-rhel-9-0-1' }
                    environment {
                        TEST_OS = "rhel-9-1"
                    }
                    steps {
                        run_virt_test('simplified-installer')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('EL9.1 rebase') {
                    agent { label 'vm-rhel-9-1-0' }
                    environment {
                        TEST_OS = "rhel-9-1"
                    }
                    steps {
                        run_virt_test('ostree-rebase')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('EL9.1 8to9') {
                    agent { label 'vm-rhel-9-1-0' }
                    environment {
                        TEST_OS = "rhel-9-1"
                    }
                    steps {
                        run_virt_test('ostree-8-to-9')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('CS8 Virt') {
                    agent { label 'vm-cs8' }
                    environment {
                        TEST_OS = "centos-stream-8"
                    }
                    steps {
                        run_virt_test('ostree-legacy')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('CS8 ng Virt') {
                    agent { label 'vm-cs8' }
                    environment {
                        TEST_OS = "centos-stream-8"
                    }
                    steps {
                        run_virt_test('ostree-ng')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('CS8 simplified installer') {
                    agent { label 'vm-cs8' }
                    environment {
                        TEST_OS = "centos-stream-8"
                    }
                    steps {
                        run_virt_test('simplified-installer')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('CS8 rebase') {
                    agent { label 'vm-cs8' }
                    environment {
                        TEST_OS = "centos-stream-8"
                    }
                    steps {
                        run_virt_test('ostree-rebase')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('CS9 Virt') {
                    agent { label 'vm-cs9' }
                    environment {
                        TEST_OS = "centos-stream-9"
                    }
                    steps {
                        run_virt_test('ostree-legacy')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('CS9 ng Virt') {
                    agent { label 'vm-cs9' }
                    environment {
                        TEST_OS = "centos-stream-9"
                    }
                    steps {
                        run_virt_test('ostree-ng')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('CS9 simplified installer') {
                    agent { label 'vm-cs9' }
                    environment {
                        TEST_OS = "centos-stream-9"
                    }
                    steps {
                        run_virt_test('simplified-installer')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('CS9 rebase') {
                    agent { label 'vm-cs9' }
                    environment {
                        TEST_OS = "centos-stream-9"
                    }
                    steps {
                        run_virt_test('ostree-rebase')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
                stage('CS9 8to9') {
                    agent { label 'vm-cs9' }
                    environment {
                        TEST_OS = "centos-stream-9"
                    }
                    steps {
                        run_virt_test('ostree-8-to-9')
                    }
                    post {
                        always {
                            preserve_logs()
                            get_package_info()
                        }
                    }
                }
            }
        }
    }
    options {
        timestamps()
        timeout(time: 3, unit: 'HOURS')
    }
}

void run_virt_test(test_type) {
    sh label: 'wait until cloud-init done', script: """
        while true; do
            test -f /var/lib/cloud/instance/boot-finished && break
        done
        printenv
    """

    if (test_type == 'ostree-ng') {
        withCredentials([usernamePassword(credentialsId: 'quay-io-credential', passwordVariable: 'QUAY_PASSWORD', usernameVariable: 'QUAY_USERNAME'), string(credentialsId: 'ocp-c1-token', variable: 'OCP4_TOKEN')]) {
            sh "./ostree-ng.sh"
        }
    }
    if (test_type == 'ostree-legacy') {
        sh "./ostree.sh"
    }
    if (test_type == 'raw-image') {
        sh "./ostree-raw-image.sh"
    }
    if (test_type == 'simplified-installer') {
        sh "./ostree-simplified-installer.sh"
    }
    if (test_type == 'ostree-rebase') {
        sh "./ostree-rebase.sh"
    }
    if (test_type == 'ostree-8-to-9') {
        sh "./ostree-8-to-9.sh"
    }
}

void preserve_logs() {
    archiveArtifacts allowEmptyArchive: true, artifacts: 'osbuild-*.log'
    archiveArtifacts allowEmptyArchive: true, artifacts: 'osbuild-*.json'
}

void get_package_info() {
    script {
        env.PACKAGE_INFO = sh(returnStdout: true, script: 'rpm -qa | grep -E "osbuild|composer-cli"').trim()
    }
}

void bare_clean() {
    withCredentials([file(credentialsId: 'openstack-clouds-yaml', variable: 'OS_CLIENT_CONFIG_FILE')]) {
        sh "ansible-playbook -v -i inventory ostree-bare-clean.yml"
    }
}
