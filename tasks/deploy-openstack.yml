---
- name: create log folder in playbook dir to save log file
  file:
    path: "{{ playbook_dir }}/log"
    state: directory

- name: create a new openstack keypair
  openstack.cloud.keypair:
    cloud: rhos-01
    state: present
    name: "rhel-edge"
    public_key_file: key/ostree_key.pub

- name: create security group
  openstack.cloud.security_group:
    cloud: rhos-01
    name: "rhel-edge"
    state: present
    description: security group for ostree image build server

- name: set ssh rule for security group
  openstack.cloud.security_group_rule:
    cloud: rhos-01
    security_group: "rhel-edge"
    protocol: tcp
    port_range_min: 22
    port_range_max: 22
    remote_ip_prefix: 0.0.0.0/0

- name: set http rule for security group
  openstack.cloud.security_group_rule:
    cloud: rhos-01
    security_group: "rhel-edge"
    protocol: tcp
    port_range_min: 80
    port_range_max: 80
    remote_ip_prefix: 0.0.0.0/0

- set_fact:
    vm_name: "rhel-edge-image-builder-{{ os }}-{{ random_number }}"

- name: deploy instance
  openstack.cloud.server:
    cloud: rhos-01
    name: "{{ vm_name }}"
    image: "{{ os_images[os] }}"
    flavor: "{{ os_flavor }}"
    network: "{{ os_network }}"
    key_name: "rhel-edge"
    security_groups: "rhel-edge"
    auto_ip: yes
    wait: yes
    timeout: 600
    userdata: |
      #cloud-config
      {% if "8-6" in os %}
      yum_repos:
        baseos:
          name: rhel8-baseos
          baseurl: "https://download-node-02.eng.bos.redhat.com/rhel-8/nightly/RHEL-8/latest-{{ distros[os] }}/compose/BaseOS/x86_64/os/"
          enabled: true
          gpgcheck: false
          sslverify: false
        appstream:
          name: rhel8-appstream
          baseurl: "https://download-node-02.eng.bos.redhat.com/rhel-8/nightly/RHEL-8/latest-{{ distros[os] }}/compose/AppStream/x86_64/os/"
          enabled: true
          gpgcheck: false
          sslverify: false
      {% endif %}
      {% if "8-7" in os %}
      yum_repos:
        baseos:
          name: rhel8-baseos
          baseurl: "https://download-node-02.eng.bos.redhat.com/rhel-8/nightly/RHEL-8/latest-{{ distros[os] }}/compose/BaseOS/x86_64/os/"
          enabled: true
          gpgcheck: false
          sslverify: false
        appstream:
          name: rhel8-appstream
          baseurl: "https://download-node-02.eng.bos.redhat.com/rhel-8/nightly/RHEL-8/latest-{{ distros[os] }}/compose/AppStream/x86_64/os/"
          enabled: true
          gpgcheck: false
          sslverify: false
      {% endif %}
      {% if "9-0" in os %}
      yum_repos:
        baseos:
          name: rhel9-baseos
          baseurl: "https://download-node-02.eng.bos.redhat.com/rhel-9/nightly/RHEL-9/latest-{{ distros[os] }}/compose/BaseOS/x86_64/os/"
          enabled: true
          gpgcheck: false
          sslverify: false
        appstream:
          name: rhel9-appstream
          baseurl: "https://download-node-02.eng.bos.redhat.com/rhel-9/nightly/RHEL-9/latest-{{ distros[os] }}/compose/AppStream/x86_64/os/"
          enabled: true
          gpgcheck: false
          sslverify: false
      {% endif %}
      {% if "9-1" in os %}
      yum_repos:
        baseos:
          name: rhel9-baseos
          baseurl: "https://download-node-02.eng.bos.redhat.com/rhel-9/nightly/RHEL-9/latest-{{ distros[os] }}/compose/BaseOS/x86_64/os/"
          enabled: true
          gpgcheck: false
          sslverify: false
        appstream:
          name: rhel9-appstream
          baseurl: "https://download-node-02.eng.bos.redhat.com/rhel-9/nightly/RHEL-9/latest-{{ distros[os] }}/compose/AppStream/x86_64/os/"
          enabled: true
          gpgcheck: false
          sslverify: false
      {% endif %}
      packages:
        - python3
        - python3-dnf
      users:
        - default
        - name: admin
          gecos: Administrator
          groups: users,wheel
          sudo: ALL=(ALL) NOPASSWD:ALL
          ssh_authorized_keys:
            - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzxo5dEcS+LDK/OFAfHo6740EyoDM8aYaCkBala0FnWfMMTOq7PQe04ahB0eFLS3IlQtK5bpgzxBdFGVqF6uT5z4hhaPjQec0G3+BD5Pxo6V+SxShKZo+ZNGU3HVrF9p2V7QH0YFQj5B8F6AicA3fYh2BVUFECTPuMpy5A52ufWu0r4xOFmbU7SIhRQRAQz2u4yjXqBsrpYptAvyzzoN4gjUhNnwOHSPsvFpWoBFkWmqn0ytgHg3Vv9DlHW+45P02QH1UFedXR2MqLnwRI30qqtaOkVS+9rE/dhnR+XPpHHG+hv2TgMDAuQ3IK7Ab5m/yCbN73cxFifH4LST0vVG3Jx45xn+GTeHHhfkAfBSCtya6191jixbqyovpRunCBKexI5cfRPtWOitM3m7Mq26r7LpobMM+oOLUm4p0KKNIthWcmK9tYwXWSuGGfUQ+Y8gt7E0G06ZGbCPHOrxJ8lYQqXsif04piONPA/c9Hq43O99KPNGShONCS9oPFdOLRT3U= ostree-image-test
      ssh_pwauth: True
      chpasswd:
        list: |
          root:foobar
          admin:foobar
        expire: False
  register: instance_result

- name: waits until instance is reachable
  wait_for:
    host: "{{ instance_result.openstack.public_v4 }}"
    port: 22
    search_regex: OpenSSH
    delay: 10

- name: add os instance ip into host group builder
  add_host:
    name: "{{ instance_result.openstack.public_v4 }}"
    groups: builder
    builder_ip: "{{ instance_result.openstack.public_v4 }}"

- name: set private key permisson to 600
  file:
    path: key/ostree_key
    mode: "0600"

- name: ensure cloud-init has finished
  raw: test -f /var/lib/cloud/instance/boot-finished
  retries: 60
  register: cloud_init_check
  changed_when: false
  until: cloud_init_check is success
  delegate_to: "{{ instance_result.openstack.public_v4 }}"

- name: write instance name info to inventory file
  ini_file:
    path: "{{ playbook_dir }}/inventory"
    section: cloud:vars
    option: instance_name
    value: "{{ vm_name }}"
    no_extra_spaces: yes
