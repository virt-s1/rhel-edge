---
- name: start image building
  command: "composer-cli compose start-ostree --ref {{ ostree_ref[os] }} --url http://{{ builder_ip }}/repo/ upgrade-container rhel-edge-container"
  become: yes
  register: compose_start
  ignore_errors: yes

- debug:
    var: compose_start

- name: get compose status
  command: composer-cli compose status
  become: yes
  register: compose_status

- name: get and set compose uuid
  set_fact:
    compose_uuid: "{{ compose_status.stdout.split()[0] }}"

- name: collect image building log no matter success or fail
  block:
    - name: wait until image building finished
      command: composer-cli compose status
      become: yes
      register: compose_status
      retries: 60
      delay: 30
      until: "'FINISHED' in compose_status.stdout"
  always:
    - name: collect compose log
      command: "composer-cli compose log {{ compose_uuid }}"
      register: result_log
      become: yes
    - name: save compose log
      copy:
        content: "{{ result_log.stdout }}"
        dest: /tmp/compose.upgrade.log
    - name: fetch log file back
      fetch:
        src: /tmp/compose.upgrade.log
        dest: "{{ playbook_dir }}/log/"
        flat: yes

- name: add upgrade image building result into report.xml
  xml:
    path: "{{ playbook_dir }}/report.xml"
    xpath: /testsuite
    input_type: xml
    add_children:
      - <testcase name="build upgrade {{ ostree_type[os] }}" classname="image building"></testcase>
  delegate_to: localhost

- name: add failure result into report.xml
  xml:
    path: "{{ playbook_dir }}/report.xml"
    xpath: /testsuite/testcase[@name="build upgrade {{ ostree_type[os] }}"]
    input_type: xml
    add_children:
      - <failure message="building upgrade image {{ ostree_name[os] }} failed">building upgrade image {{ ostree_name[os] }} failed</failure>
  delegate_to: localhost
  when: compose_status is failed

- fail:
    msg: building ostree image fail
  when: compose_status is failed

- name: download ostree image
  command: "composer-cli compose image {{ compose_uuid }}"
  become: yes

# Cannot find how to remove all containers/images in ansible, use shell instead
- name: remove all containers and images
  shell: |
    podman rm -f -a
    podman rmi -f -a
  become: yes

# Cannot find how to pull image from a tar file in ansible, use shell instead
- name: pull image from rhel for edge container tar file
  shell: podman pull "oci-archive:{{ compose_uuid }}-rhel84-container.tar"
  become: yes
  when: os == "rhel-8-4"

- name: pull image from rhel for edge container tar file
  shell: podman pull "oci-archive:{{ compose_uuid }}-container.tar"
  become: yes
  when: os == "rhel-8-5"

- name: Gather info for all images
  containers.podman.podman_image_info:
  register: result
  become: yes

- name: Set image id
  set_fact:
    image_id: "{{ result.images[0].Id }}"

- debug:
    msg: "Image ID is: \n {{ image_id }}"

- name: Run container
  containers.podman.podman_container:
    name: rhel-edge
    image: "{{ image_id }}"
    network: edge
    ip: 192.168.200.1
    state: started
  become: yes

- name: fetch upgrade commit from container to prod repo
  shell: |
    ostree --repo=/var/www/html/repo pull --mirror edge-stage {{ ostree_ref[os] }}
    ostree --repo=/var/www/html/repo static-delta generate {{ ostree_ref[os] }}
    ostree --repo=/var/www/html/repo summary -u
  become: yes

- name: Get ostree commit hash from prod repo
  command: cat /var/www/html/repo/refs/heads/rhel/8/x86_64/edge
  register: result_commit_hash

- name: Set ostree commit has to var->ostree_commit
  set_fact:
    ostree_commit: "{{ result_commit_hash.stdout }}"

- debug:
    var: ostree_commit

- name: add failure result into report.xml
  xml:
    path: "{{ playbook_dir }}/report.xml"
    xpath: /testsuite/testcase[@name="build upgrade {{ ostree_type[os] }}"]
    input_type: xml
    add_children:
      - <system-out>{{ ostree_commit }}</system-out>
  delegate_to: localhost

- name: add migrate repo result into report.xml
  xml:
    path: "{{ playbook_dir }}/report.xml"
    xpath: /testsuite
    input_type: xml
    add_children:
      - <testcase name="migrate repo" classname="migrate repo"></testcase>
  delegate_to: localhost

- name: delete generated image
  command: "composer-cli compose delete {{ compose_uuid }}"
  become: yes
