---
- name: "get latest {{ distros[os] }} distro"
  command: bkr distros-list --name {{ distros[os] }}% --tag=CTS_NIGHTLY --limit=1 --format=json
  register: distro_result

- name: json format
  set_fact:
    tmp_result: "{{ distro_result.stdout | from_json }}"

- name: set latest distro name
  set_fact:
    distro_name: "{{ tmp_result[0].distro_name }}"

- name: generate job xml
  template:
    src: templates/beaker-job-xml.j2
    dest: beaker-job.xml

- name: submit beaker job
  command: bkr job-submit beaker-job.xml
  register: job_result

- name: got job id
  set_fact:
    job_id: "{{ job_result.stdout.split(\"'\")[1] }}"

- name: write instance name info to inventory file
  ini_file:
    path: "{{ playbook_dir }}/inventory"
    section: cloud:vars
    option: job_id
    value: "{{ job_id }}"
    no_extra_spaces: yes

# have to wait 2 hours to get a bare metal server
- name: wait for job complete
  command: bkr job-results --prettyxml {{ job_id }}
  register: job_finished
  retries: 120
  delay: 60
  # until: "'result=\"Pass\" status=\"Running\"' in job_finished.stdout"
  until: "'result=\"New\" status=\"Waiting\"' in job_finished.stdout_lines[1]"

- debug:
    var: job_finished

- name: write job-results output to xml file
  copy:
    content: "{{ job_finished.stdout }}"
    dest: job-result-output.xml

- name: get hostname from job-results output
  xml:
    path: job-result-output.xml
    xpath: /job/recipeSet/recipe
    content: attribute
  register: recipe_attribute

- name: set hostname of ostree client
  set_fact:
    ostree_hostname: "{{ recipe_attribute.matches[0].recipe.system }}"

- name: wait for ssh is reachable
  wait_for:
    host: "{{ ostree_hostname }}"
    port: 22
    search_regex: OpenSSH
    delay: 10
    timeout: 3600

- name: set private key permisson to 600
  file:
    path: key/ostree_key
    mode: "0600"
