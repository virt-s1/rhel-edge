---
name: FDO Container Test on CentOS Stream 9

on:
  issue_comment:
    types:
      - created

jobs:
  pr-info:
    if: ${{ github.event.issue.pull_request &&
            (endsWith(github.event.comment.body, '/test-fdo-container-community') ||
            endsWith(github.event.comment.body, '/test-fdo-container-official')) }}
    runs-on: ubuntu-latest
    steps:
      - name: Query author repository permissions
        uses: octokit/request-action@v2.x
        id: user_permission
        with:
          route: GET /repos/${{ github.repository }}/collaborators/${{ github.event.sender.login }}/permission
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # restrict running of tests to users with admin or write permission for the repository
      # see https://docs.github.com/en/free-pro-team@latest/rest/reference/repos#get-repository-permissions-for-a-user
      - name: Check if user does have correct permissions
        if: contains('admin write', fromJson(steps.user_permission.outputs.data).permission)
        id: check_user_perm
        run: |
          echo "User '${{ github.event.sender.login }}' has permission '${{ fromJson(steps.user_permission.outputs.data).permission }}' allowed values: 'admin', 'write'"
          echo "allowed_user=true" >> $GITHUB_OUTPUT
      - name: Get information for pull request
        uses: octokit/request-action@v2.x
        id: pr-api
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      allowed_user: ${{ steps.check_user_perm.outputs.allowed_user }}
      sha: ${{ fromJson(steps.pr-api.outputs.data).head.sha }}

  pre-fdo-container-community:
    needs: pr-info
    if: ${{ needs.pr-info.outputs.allowed_user == 'true' && github.event.issue.pull_request &&
            endsWith(github.event.comment.body, '/test-fdo-container-community') }}
    runs-on: ubuntu-latest
    env:
      STATUS_NAME: fdo-container-community

    steps:
      - name: Create in-progress status
        uses: octokit/request-action@v2.x
        with:
          route: 'POST /repos/${{ github.repository }}/statuses/${{ needs.pr-info.outputs.sha }}'
          context: ${{ env.STATUS_NAME }}
          state: pending
          description: 'Centos Stream 9 - Runner has been deploying...'
          target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  fdo-container-community:
    needs: [pr-info, pre-fdo-container-community]
    runs-on: [kite, x86_64, gcp, centos-stream-9, medium]
    env:
      STATUS_NAME: fdo-container-community

    steps:
      - name: Create in-progress status
        uses: octokit/request-action@v2.x
        with:
          route: 'POST /repos/${{ github.repository }}/statuses/${{ needs.pr-info.outputs.sha }}'
          context: ${{ env.STATUS_NAME }}
          state: pending
          description: 'Centos Stream 9 - Test has been running...'
          target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clone repository
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.pr-info.outputs.sha }}
          fetch-depth: 0

      - name: run ostree-fdo-container.sh
        run: ./ostree-fdo-container.sh
        env:
          FDO_REGISTRY: "quay.io/fido-fdo"
          OWNER_ONBOARDING_SERVER_NAME: "owner-onboarding-server"
          MANUFACTURING_SERVER_NAME: "manufacturing-server"
          RENDEZVOUS_SERVER_NAME: "rendezvous-server"
          SERVICEINFO_API_SERVER_NAME: "serviceinfo-api-server"
          DOWNLOAD_NODE: ${{ secrets.DOWNLOAD_NODE }}
        timeout-minutes: 120

      - name: Set non cancelled result status
        if: ${{ !cancelled() }}
        uses: octokit/request-action@v2.x
        with:
          route: 'POST /repos/${{ github.repository }}/statuses/${{ needs.pr-info.outputs.sha }}'
          context: ${{ env.STATUS_NAME }}
          state: ${{ job.status }}
          description: 'Centos Stream 9 - Test got ${{ job.status }}'
          target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set cancelled result status
        if: ${{ cancelled() }}
        uses: octokit/request-action@v2.x
        with:
          route: 'POST /repos/${{ github.repository }}/statuses/${{ needs.pr-info.outputs.sha }}'
          context: ${{ env.STATUS_NAME }}
          state: error
          description: 'Centos Stream 9 - Test got error'
          target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: fdo-container-community
          path: |
            *.json
            *.log

  pre-fdo-container-official:
    needs: pr-info
    if: ${{ needs.pr-info.outputs.allowed_user == 'true' && github.event.issue.pull_request &&
            endsWith(github.event.comment.body, '/test-fdo-container-official') }}
    runs-on: ubuntu-latest
    env:
      STATUS_NAME: fdo-container-official

    steps:
      - name: Create in-progress status
        uses: octokit/request-action@v2.x
        with:
          route: 'POST /repos/${{ github.repository }}/statuses/${{ needs.pr-info.outputs.sha }}'
          context: ${{ env.STATUS_NAME }}
          state: pending
          description: 'RHEL 9.3 - Runner has been deploying...'
          target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  fdo-container-official:
    needs: [pr-info, pre-fdo-container-official]
    runs-on: [kite, x86_64, rhos-01, rhel-9-3, medium]
    env:
      STATUS_NAME: fdo-container-official

    steps:
      - name: Create in-progress status
        uses: octokit/request-action@v2.x
        with:
          route: 'POST /repos/${{ github.repository }}/statuses/${{ needs.pr-info.outputs.sha }}'
          context: ${{ env.STATUS_NAME }}
          state: pending
          description: 'RHEL 9.3 - Test has been running...'
          target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clone repository
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.pr-info.outputs.sha }}
          fetch-depth: 0

      - name: run ostree-fdo-container.sh
        run: ./ostree-fdo-container.sh
        env:
          FDO_REGISTRY: ${{ secrets.FDO_OFFICIAL_REGISTRY }}
          OWNER_ONBOARDING_SERVER_NAME: "rhel9-fdo-owner-onboarding-server"
          MANUFACTURING_SERVER_NAME: "rhel9-fdo-manufacturing-server"
          RENDEZVOUS_SERVER_NAME: "rhel9-fdo-rendezvous-server"
          SERVICEINFO_API_SERVER_NAME: "rhel9-fdo-serviceinfo-api-server"
          DOWNLOAD_NODE: ${{ secrets.DOWNLOAD_NODE }}
        timeout-minutes: 120

      - name: Set non cancelled result status
        if: ${{ !cancelled() }}
        uses: octokit/request-action@v2.x
        with:
          route: 'POST /repos/${{ github.repository }}/statuses/${{ needs.pr-info.outputs.sha }}'
          context: ${{ env.STATUS_NAME }}
          state: ${{ job.status }}
          description: 'RHEL 9.3 - Test got ${{ job.status }}'
          target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set cancelled result status
        if: ${{ cancelled() }}
        uses: octokit/request-action@v2.x
        with:
          route: 'POST /repos/${{ github.repository }}/statuses/${{ needs.pr-info.outputs.sha }}'
          context: ${{ env.STATUS_NAME }}
          state: error
          description: 'RHEL 9.3 - Test got error'
          target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: fdo-container-official
          path: |
            *.json
            *.log
