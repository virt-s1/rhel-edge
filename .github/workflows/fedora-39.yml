---
name: Run Edge Test on Fedora 39

on:
  issue_comment:
    types:
      - created

jobs:
  pr-info:
    if: ${{ github.event.issue.pull_request &&
            (endsWith(github.event.comment.body, '/test-f39')) }}
    runs-on: ubuntu-latest
    steps:
      - name: Query author repository permissions
        uses: octokit/request-action@v2.x
        id: user_permission
        with:
          route: GET /repos/${{ github.repository }}/collaborators/${{ github.event.sender.login }}/permission
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if user does have correct permissions
        if: contains('admin write', fromJson(steps.user_permission.outputs.data).permission)
        id: check_user_perm
        run: |
          echo "User '${{ github.event.sender.login }}' has permission '${{ fromJson(steps.user_permission.outputs.data).permission }}' allowed values: 'admin', 'write'"
          echo "allowed_user=true" >> $GITHUB_OUTPUT

      - name: Get information for pull request
        uses: octokit/request-action@v2.x
        id: pr-api
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      allowed_user: ${{ steps.check_user_perm.outputs.allowed_user }}
      sha: ${{ fromJson(steps.pr-api.outputs.data).head.sha }}
      ref: ${{ fromJson(steps.pr-api.outputs.data).head.ref }}
      repo_url: ${{ fromJson(steps.pr-api.outputs.data).head.repo.html_url }}

  iot-f39-x86:
    needs: pr-info
    if: ${{ needs.pr-info.outputs.allowed_user == 'true' && github.event.issue.pull_request }}
    continue-on-error: true
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4
        with:
          ref: ${{ needs.pr-info.outputs.sha }}
          fetch-depth: 0

      - name: Run the tests
        uses: sclorg/testing-farm-as-github-action@v2
        with:
          compose: Fedora-39-Updated
          arch: x86_64
          api_key: ${{ secrets.TF_API_KEY }}
          git_url: ${{ needs.pr-info.outputs.repo_url }}
          git_ref: ${{ needs.pr-info.outputs.ref }}
          update_pull_request_status: true
          pull_request_status_name: "iot-f39-x86"
          tmt_plan_regex: edge-x86
          tf_scope: private
          secrets: "DOWNLOAD_NODE=${{ secrets.DOWNLOAD_NODE }};OCP4_TOKEN=${{ secrets.OCP4_TOKEN }};QUAY_USERNAME=${{ secrets.QUAY_USERNAME }};QUAY_PASSWORD=${{ secrets.QUAY_PASSWORD }};DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }};DOCKERHUB_PASSWORD=${{ secrets.DOCKERHUB_PASSWORD }};AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }};AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }};GOVC_URL=${{ secrets.GOVC_URL }};GOVC_USERNAME=${{ secrets.GOVC_USERNAME }};GOVC_PASSWORD=${{ secrets.GOVC_PASSWORD }}"
          variables: "ARCH=x86_64;AWS_DEFAULT_REGION=us-east-1;GOVC_INSECURE=1"

  iot-f39-arm:
    needs: pr-info
    if: ${{ needs.pr-info.outputs.allowed_user == 'true' && github.event.issue.pull_request }}
    continue-on-error: true
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4
        with:
          ref: ${{ needs.pr-info.outputs.sha }}
          fetch-depth: 0

      - name: Run the tests
        uses: sclorg/testing-farm-as-github-action@v2
        with:
          compose: Fedora-39-Updated
          arch: aarch64
          api_key: ${{ secrets.TF_API_KEY }}
          git_url: ${{ needs.pr-info.outputs.repo_url }}
          git_ref: ${{ needs.pr-info.outputs.ref }}
          update_pull_request_status: true
          pull_request_status_name: "iot-f39-arm"
          tmt_plan_regex: edge-arm
          tf_scope: private
          secrets: "DOWNLOAD_NODE=${{ secrets.DOWNLOAD_NODE }};OCP4_TOKEN=${{ secrets.OCP4_TOKEN }};QUAY_USERNAME=${{ secrets.QUAY_USERNAME }};QUAY_PASSWORD=${{ secrets.QUAY_PASSWORD }};DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }};DOCKERHUB_PASSWORD=${{ secrets.DOCKERHUB_PASSWORD }};AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }};AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }};GOVC_URL=${{ secrets.GOVC_URL }};GOVC_USERNAME=${{ secrets.GOVC_USERNAME }};GOVC_PASSWORD=${{ secrets.GOVC_PASSWORD }}"
          variables: "ARCH=x86_64;AWS_DEFAULT_REGION=us-east-1;GOVC_INSECURE=1"
