name: export tmt test run to Polarion

on:
  workflow_dispatch:
    inputs:
      compose:
        required: true
        default: RHEL-9.6.0
      arch:
        required: true
        default: x86_64

jobs:
  pr-info:
    runs-on: ubuntu-latest
    steps:
      - name: Query author repository permissions
        uses: octokit/request-action@v2.x
        id: user_permission
        with:
          route: GET /repos/${{ github.repository }}/collaborators/${{ github.event.sender.login }}/permission
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if user does have correct permissions
        if: contains('admin write', fromJson(steps.user_permission.outputs.data).permission)
        id: check_user_perm
        run: |
          echo "User '${{ github.event.sender.login }}' has permission '${{ fromJson(steps.user_permission.outputs.data).permission }}' allowed values: 'admin', 'write'"
          echo "allowed_user=true" >> $GITHUB_OUTPUT

      - name: Get information for pull request
        if: ${{ github.event_name == 'pull_request' }}
        uses: octokit/request-action@v2.x
        id: pr-api
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Defaults for manual runs
        if: ${{ github.event_name == 'workflow_dispatch' }}
        id: manual-defaults
        run: |
          echo "sha=${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "ref=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          echo "repo_url=https://github.com/${{ github.repository }}" >> $GITHUB_OUTPUT
          echo "compose_id=${{ inputs.compose }}" >> $GITHUB_OUTPUT

    outputs:
      allowed_user: ${{ steps.check_user_perm.outputs.allowed_user }}
      sha: ${{ (fromJson(steps.pr-api.outputs.data).head.sha) || steps.manual-defaults.outputs.sha }}
      ref: ${{ (fromJson(steps.pr-api.outputs.data).head.ref) || steps.manual-defaults.outputs.ref }}
      repo_url: ${{ (fromJson(steps.pr-api.outputs.data).head.repo.html_url) || steps.manual-defaults.outputs.repo_url }}
      compose_id: ${{ (fromJson(steps.pr-api.outputs.data).title) || steps.manual-defaults.outputs.compose_id }}

  export-test-case:
    needs: pr-info
    if: ${{ needs.pr-info.outputs.allowed_user == 'true' }}
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Export the test case to Polarion
        uses: sclorg/testing-farm-as-github-action@v3.1.2
        with:
          compose: RHEL-9.6.0-Nightly
          arch: x86_64
          api_key: ${{ secrets.TF_API_KEY }}
          git_url: ${{ needs.pr-info.outputs.repo_url }}
          git_ref: ${{ needs.pr-info.outputs.ref }}
          update_pull_request_status: ${{ github.event_name == 'pull_request' }}
          tmt_context: "arch=${{ inputs.arch }};distro=rhel-9-6"
          pull_request_status_name: "edge-rhel-9.6-x86"
          tmt_plan_regex: "export-to-polarion-plan"
          secrets: |
            POLARION_USER=${{ secrets.POLARION_USER }}
            POLARION_PASSWORD=${{ secrets.POLARION_PASSWORD }}
            POLARION_PROJECT=${{ secrets.POLARION_PROJECT }}
            POLARION_URL=${{ secrets.POLARION_URL }}
