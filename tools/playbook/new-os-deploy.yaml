---
- hosts: openstack
  gather_facts: no
  become: no
  vars:
    date_label: "{{ lookup('pipe', 'date +%y%m%d%H%M%S') }}"
    flavor: "ci.standard.large"
    cloud_profile: "rhos-01"
    os_network:
      rhos-01: "shared_net_9"
      rhos-0x: "shared_net_9"

  tasks:
    - name: "deploy RHEL instance"
      openstack.cloud.server:
        cloud: "{{ cloud_profile }}"
        name: "{{ os }}-{{ date_label }}"
        image: "{{ images[os] }}"
        flavor: "{{ flavor }}"
        network: "{{ os_network[cloud_profile] }}"
        key_name: xiaofwan
        security_groups: debug_vm
        auto_ip: yes
        config_drive: yes
        wait: yes
        timeout: 600
        userdata: |
          #cloud-config
          users:
            - default
            - name: admin
              gecos: Administrator
              groups: users,wheel
              sudo: ALL=(ALL) NOPASSWD:ALL
              ssh_authorized_keys:
                - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzxo5dEcS+LDK/OFAfHo6740EyoDM8aYaCkBala0FnWfMMTOq7PQe04ahB0eFLS3IlQtK5bpgzxBdFGVqF6uT5z4hhaPjQec0G3+BD5Pxo6V+SxShKZo+ZNGU3HVrF9p2V7QH0YFQj5B8F6AicA3fYh2BVUFECTPuMpy5A52ufWu0r4xOFmbU7SIhRQRAQz2u4yjXqBsrpYptAvyzzoN4gjUhNnwOHSPsvFpWoBFkWmqn0ytgHg3Vv9DlHW+45P02QH1UFedXR2MqLnwRI30qqtaOkVS+9rE/dhnR+XPpHHG+hv2TgMDAuQ3IK7Ab5m/yCbN73cxFifH4LST0vVG3Jx45xn+GTeHHhfkAfBSCtya6191jixbqyovpRunCBKexI5cfRPtWOitM3m7Mq26r7LpobMM+oOLUm4p0KKNIthWcmK9tYwXWSuGGfUQ+Y8gt7E0G06ZGbCPHOrxJ8lYQqXsif04piONPA/c9Hq43O99KPNGShONCS9oPFdOLRT3U= ostree-image-test
              ssh_pwauth: True
              chpasswd:
                list: |
                  root:foobar
                  admin:foobar
                expire: False
          yum_repos:
            baseos:
              name: rhel-baseos
              baseurl: "{{ repos[os]['baseos'] }}"
              enabled: true
              gpgcheck: false
              sslverify: false
            appstream:
              name: rhel-appstream
              baseurl: "{{ repos[os]['appstream'] }}"
              enabled: true
              gpgcheck: false
              sslverify: false
            crb:
              name: rhel-appstream
              baseurl: "{{ repos[os]['crb'] }}"
              enabled: true
              gpgcheck: false
              sslverify: false
          packages:
            - python3
            - python3-dnf
      register: tmp_instance_result
      when: "'rhel' in os"

    # avoid registering a variable when a “when” condition is *not* met
    - set_fact:
        instance_result: "{{ tmp_instance_result }}"
      when: tmp_instance_result.changed

    - name: "deploy CentOS Stream instance"
      openstack.cloud.server:
        cloud: "{{ cloud_profile }}"
        name: "{{ os }}-{{ date_label }}"
        image: "{{ images[os] }}"
        flavor: "{{ flavor }}"
        network: "{{ os_network[cloud_profile] }}"
        key_name: xiaofwan
        security_groups: debug_vm
        auto_ip: yes
        config_drive: yes
        wait: yes
        timeout: 600
        userdata: |
          #cloud-config
          packages:
            - python3
            - python3-dnf
          users:
            - default
            - name: admin
              gecos: Administrator
              groups: users,wheel
              sudo: ALL=(ALL) NOPASSWD:ALL
              ssh_authorized_keys:
                - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzxo5dEcS+LDK/OFAfHo6740EyoDM8aYaCkBala0FnWfMMTOq7PQe04ahB0eFLS3IlQtK5bpgzxBdFGVqF6uT5z4hhaPjQec0G3+BD5Pxo6V+SxShKZo+ZNGU3HVrF9p2V7QH0YFQj5B8F6AicA3fYh2BVUFECTPuMpy5A52ufWu0r4xOFmbU7SIhRQRAQz2u4yjXqBsrpYptAvyzzoN4gjUhNnwOHSPsvFpWoBFkWmqn0ytgHg3Vv9DlHW+45P02QH1UFedXR2MqLnwRI30qqtaOkVS+9rE/dhnR+XPpHHG+hv2TgMDAuQ3IK7Ab5m/yCbN73cxFifH4LST0vVG3Jx45xn+GTeHHhfkAfBSCtya6191jixbqyovpRunCBKexI5cfRPtWOitM3m7Mq26r7LpobMM+oOLUm4p0KKNIthWcmK9tYwXWSuGGfUQ+Y8gt7E0G06ZGbCPHOrxJ8lYQqXsif04piONPA/c9Hq43O99KPNGShONCS9oPFdOLRT3U= ostree-image-test
              ssh_pwauth: True
      register: tmp_instance_result
      when: "'centos' in os"

    # avoid registering a variable when a “when” condition is *not* met
    - set_fact:
        instance_result: "{{ tmp_instance_result }}"
      when: tmp_instance_result.changed

    - name: "deploy Fedora instance"
      openstack.cloud.server:
        cloud: "{{ cloud_profile }}"
        name: "{{ os }}-{{ date_label }}"
        image: "{{ images[os] }}"
        flavor: "{{ flavor }}"
        network: "{{ os_network[cloud_profile] }}"
        key_name: xiaofwan
        security_groups: debug_vm
        auto_ip: yes
        config_drive: yes
        wait: yes
        timeout: 600
        userdata: |
          #cloud-config
          packages:
            - python3
            - python3-dnf
          users:
            - default
            - name: admin
              gecos: Administrator
              groups: users,wheel
              sudo: ALL=(ALL) NOPASSWD:ALL
              ssh_authorized_keys:
                - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzxo5dEcS+LDK/OFAfHo6740EyoDM8aYaCkBala0FnWfMMTOq7PQe04ahB0eFLS3IlQtK5bpgzxBdFGVqF6uT5z4hhaPjQec0G3+BD5Pxo6V+SxShKZo+ZNGU3HVrF9p2V7QH0YFQj5B8F6AicA3fYh2BVUFECTPuMpy5A52ufWu0r4xOFmbU7SIhRQRAQz2u4yjXqBsrpYptAvyzzoN4gjUhNnwOHSPsvFpWoBFkWmqn0ytgHg3Vv9DlHW+45P02QH1UFedXR2MqLnwRI30qqtaOkVS+9rE/dhnR+XPpHHG+hv2TgMDAuQ3IK7Ab5m/yCbN73cxFifH4LST0vVG3Jx45xn+GTeHHhfkAfBSCtya6191jixbqyovpRunCBKexI5cfRPtWOitM3m7Mq26r7LpobMM+oOLUm4p0KKNIthWcmK9tYwXWSuGGfUQ+Y8gt7E0G06ZGbCPHOrxJ8lYQqXsif04piONPA/c9Hq43O99KPNGShONCS9oPFdOLRT3U= ostree-image-test
              ssh_pwauth: True
      register: tmp_instance_result
      when: "'fedora' in os"

    # avoid registering a variable when a “when” condition is *not* met
    - set_fact:
        instance_result: "{{ tmp_instance_result }}"
      when: tmp_instance_result.changed

    - name: "deploy remote instance"
      openstack.cloud.server:
        cloud: "{{ cloud_profile }}"
        name: "{{ os }}-{{ date_label }}"
        image: "{{ images[os] }}"
        flavor: "{{ flavor }}"
        network: "{{ os_network[cloud_profile] }}"
        key_name: xiaofwan
        security_groups: debug_vm
        auto_ip: yes
        config_drive: yes
        wait: yes
        timeout: 600
        userdata: |
          #cloud-config
          users:
            - default
            - name: admin
              gecos: Administrator
              groups: users,wheel
              sudo: ALL=(ALL) NOPASSWD:ALL
              ssh_authorized_keys:
                - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzxo5dEcS+LDK/OFAfHo6740EyoDM8aYaCkBala0FnWfMMTOq7PQe04ahB0eFLS3IlQtK5bpgzxBdFGVqF6uT5z4hhaPjQec0G3+BD5Pxo6V+SxShKZo+ZNGU3HVrF9p2V7QH0YFQj5B8F6AicA3fYh2BVUFECTPuMpy5A52ufWu0r4xOFmbU7SIhRQRAQz2u4yjXqBsrpYptAvyzzoN4gjUhNnwOHSPsvFpWoBFkWmqn0ytgHg3Vv9DlHW+45P02QH1UFedXR2MqLnwRI30qqtaOkVS+9rE/dhnR+XPpHHG+hv2TgMDAuQ3IK7Ab5m/yCbN73cxFifH4LST0vVG3Jx45xn+GTeHHhfkAfBSCtya6191jixbqyovpRunCBKexI5cfRPtWOitM3m7Mq26r7LpobMM+oOLUm4p0KKNIthWcmK9tYwXWSuGGfUQ+Y8gt7E0G06ZGbCPHOrxJ8lYQqXsif04piONPA/c9Hq43O99KPNGShONCS9oPFdOLRT3U= ostree-image-test
              ssh_pwauth: True
              chpasswd:
                list: |
                  root:foobar
                  admin:foobar
                expire: False
          packages:
            - python3
            - python3-dnf
      register: tmp_instance_result
      when: "'remote' in os"

    # avoid registering a variable when a “when” condition is *not* met
    - set_fact:
        instance_result: "{{ tmp_instance_result }}"
      when: tmp_instance_result.changed

    - set_fact:
        instance_ip_addr: "{{ instance_result.server.addresses.shared_net_9[0].addr }}"
      when: cloud_profile == "rhos-01" or cloud_profile == "rhos-0x"

    - set_fact:
        instance_ip_addr: "{{ instance_result.server.addresses.provider_net_shared_2[0].addr }}"
      when: cloud_profile == "rhos-d"

    - name: waits until instance is reachable
      wait_for:
        host: "{{ instance_ip_addr }}"
        port: 22
        search_regex: OpenSSH
        delay: 10

    - name: add instance ip into host group guest
      add_host:
        name: "{{ instance_ip_addr }}"
        groups: guest

    - name: keep private key permission to 600
      file:
        path: "key/ostree_key"
        mode: "0600"

    - name: ensure cloud-init has finished
      raw: test -f /var/lib/cloud/instance/boot-finished
      retries: 60
      register: cloud_init_check
      changed_when: false
      until: cloud_init_check is success
      delegate_to: "{{ instance_ip_addr }}"

- hosts: guest
  gather_facts: yes
  become: yes

  tasks:
    - name: Upgrade all packages
      dnf:
        name: '*'
        state: latest

    - name: Install test required packages
      dnf:
        name:
          - curl
          - expect
          - firewalld
          - git
          - jq
          - libvirt-client
          - libvirt-daemon-kvm
          - podman
          - qemu-img
          - qemu-kvm
          - skopeo
          - unzip
          - vim
          - virt-install
          - wget
        disable_gpg_check: yes
        state: present

    - block:
        - name: Install dependency packages
          dnf:
            name:
              - gcc
              - python3-devel
              - python3-pip

        - name: Import the Microsoft repository key
          rpm_key:
            state: present
            key: https://packages.microsoft.com/keys/microsoft.asc

        - name: Copy Azure-cli repo file
          copy:
            src: azure-cli.repo
            dest: /etc/yum.repos.d/azure-cli.repo

        - name: Copy google-cloud-sdk repo file
          copy:
            src: google-cloud-sdk.repo
            dest: /etc/yum.repos.d/google-cloud-sdk.repo

        - name: Install ansible-core, az cli and gcloud cli
          dnf:
            name:
              - beaker-client
              - ansible-core
              - azure-cli
              - google-cloud-sdk
            state: present

        - name: Install required ansible modules
          community.general.ansible_galaxy_install:
            type: collection
            name: "{{ item }}"
          loop:
            - "community.general"
            - "openstack.cloud"
            - "amazon.aws"
            - "community.aws"
            - "azure.azcollection"
            - "community.vmware"
            - "google.cloud"
            - "ansible.posix"
          become_user: fedora
        # installing community.aws is for community.aws.aws_ssm_parameter_store

        - name: Download AWS cli zip file and unzip it
          unarchive:
            src: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
            dest: /tmp
            remote_src: yes

        - name: Install AWS cli
          command: /tmp/aws/install
          become: yes

        - name: "Check versions"
          command: "{{ item }}"
          loop:
            - "ansible --version"
            - "ansible-galaxy collection list"
            - "aws --version"
            - "az --version"
            - "gcloud --version"

        - name: Delete AWS folder
          file:
            path: /tmp/aws
            state: absent

        - name: Install ansible module required packages
          pip:
            name:
              # required by openstack
              - openstacksdk
              # required by gcloud
              - google-auth
              # required by vmware
              - pyvmomi
              # required by aws
              - boto3
              - botocore
          become_user: fedora

        - name: Install azure module required packages
          pip:
            requirements: /home/fedora/.ansible/collections/ansible_collections/azure/azcollection/requirements-azure.txt
          become_user: fedora
      when: "'remote' in os"
